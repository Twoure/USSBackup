#!/usr/bin/env python

"""
DownAce.com Service Code

cannot use until ssl error corrected
URLError: <urlopen error [Errno 1] _ssl.c:504: error:14077438:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert internal error>
"""

USER_AGENT = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'

####################################################################################################
def NormalizeURL(url):

    if not '/embed/' in url:
        base = Regex(r'(https?:\/\/(?:www\.)?\w+\.\w+)\/(\w+)').search(url)
        url = base.group(1) + '/embed/' + base.group(2)

    return url

####################################################################################################
def MetadataObjectForURL(url):

    try:
        html = HTML.ElementFromURL(url, cacheTime=CACHE_1MINUTE)
    except:
        Log.Exception(u"* Error: Cannot access '{0}' >>>".format(url))
        raise Ex.MediaNotAvailable

    title = html.xpath('//title/text()')
    if not title:
        raise Ex.MediaExpired

    return VideoClipObject(
        title=title[0].strip(),
        thumb='http://i.imgur.com/75YO83o.jpg',
        source_title='DownAce'
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    html = HTML.ElementFromURL(url)
    vurl = html.xpath('//video/@src')
    if vurl:
        Log.Debug(u"* PlayVideo URL = {0}".format(vurl[0]))
        return IndirectResponse(VideoClipObject, key=vurl[0])

    raise Ex.MediaNotAvailable
